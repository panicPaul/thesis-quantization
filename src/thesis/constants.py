""" Constants for the project. """
import torch

DATA_DIR_NERSEMBLE = "../new_master_thesis/data/nersemble/Paul-audio-856/856"
"""
Directory containing the data for the NERsemble project.
"""

# from right to left, even numbers are level, while odd numbers are from below
TRAIN_CAMS = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]
TEST_CAMS = [8]
SERIALS = sorted([
    "220700191",
    "221501007",
    "222200036",
    "222200038",
    "222200039",
    "222200040",
    "222200041",
    "222200042",
    "222200043",
    "222200044",
    "222200045",
    "222200046",
    "222200047",
    "222200048",
    "222200049",
])  # NOTE: the test cam is missing i think cam_222200037
TRAIN_SEQUENCES = list(range(3, 80))
TEST_SEQUENCES = list(range(80, 102))

# flame constants
FLAME_MESH_PATH = "assets/flame/head_template_mesh.obj"
""" Path to the FLAME head template mesh. """
FLAME_LMK_PATH = "assets/flame/landmark_embedding_with_eyes.npy"
""" Path to the FLAME landmark embedding. """  # do I even need this?
# can be downloaded from https://flame.is.tue.mpg.de/download.php
FLAME_MODEL_PATH = "assets/flame/flame2023.pkl"  # FLAME 2023 (versions w/ jaw rotation)
""" Path to the FLAME model. """
FLAME_PARTS_PATH = "assets/flame/FLAME_masks.pkl"  # FLAME Vertex Masks
""" Path to the FLAME parts. """

# should all be from the same sequence and timestep
# DEFAULT_SE3_ROTATION = torch.tensor(
#     [[-0.85767704, 0.25412178, -0.44700348], [-0.12943351, -0.9480447, -0.29061666],
#      [-0.4976313, -0.19139802, 0.8460081]],
#     dtype=torch.float32)
# """ Default SE3 rotation. """
# DEFAULT_SE3_TRANSLATION = torch.tensor([0.04575331, 0.06610457, -0.05820158],
# dtype=torch.float32)
# """ Default SE3 translation. """
DEFAULT_SE3_ROTATION = torch.tensor(
    [[0.9063, 0.0401, 0.4211], [-0.1676, 0.9481, 0.2705], [-0.3885, -0.3156, 0.8662]],
    dtype=torch.float32)
""" Default SE3 rotation. """
DEFAULT_SE3_TRANSLATION = torch.tensor([0.0595, 0.0837, -0.1374], dtype=torch.float32)
""" Default SE3 translation. """
CANONICAL_PCD = 'assets/pointcloud_s03_f218.pcd'
""" Canonical point cloud. """

SEGMENTATION_CLASSES = {
    (0, 0, 0): 0,
    (207, 2, 252): 0,
    (0, 255, 0): 1,
    (1, 171, 236): 2,
    (255, 127, 0): 3,
    (8, 208, 126): 4,
    (83, 130, 55): 5,
    (8, 4, 195): 6,
    (236, 186, 110): 7,
    (141, 223, 0): 8,
    (127, 255, 255): 9,
    (255, 255, 0): 10,
    (178, 139, 210): 11,
    (167, 5, 72): 12,
    (127, 255, 127): 13,
    (73, 91, 168): 14,
}
"""
Categories:
    - 0: background
    - 1: neck
    - 2: jumper
    - 3: face
    - 4: hair
    - 5: left ear
    - 6: right ear
    - 7: upper lip
    - 8: lower lip
    - 9: nose
    - 10: left eye
    - 11: right eye
    - 12: left eyebrow
    - 13: right eyebrow
    - 14: inner mouth
"""

CANONICAL_SEQUENCE_FRAME = (3, 218)
""" Canonical sequence and frame index """
CANONICAL_FLAME_PARAMS = (torch.tensor([[
    2.2544e-02, -5.9882e-01, -7.3308e-01, 3.2558e-01, 1.2412e+00, -1.0464e-01, 1.5460e-01,
    3.5699e-01, -8.5423e-01, 9.4808e-02, -8.5080e-01, -4.7664e-01, 8.8770e-01, 1.4933e+00,
    4.8907e-01, 3.2166e-01, 5.5617e-01, -1.3641e-01, -6.4213e-01, -9.4801e-01, -1.0433e+00,
    -8.1008e-02, -2.6331e-01, -1.0034e+00, -2.0806e-01, -4.9938e-01, -7.7828e-01, -2.9156e-01,
    -7.6678e-01, -4.4536e-01, -1.6580e-01, -1.4048e+00, 9.6881e-01, 7.5500e-01, -1.7513e-01,
    3.3812e-01, 1.6860e-01, -8.5319e-01, -4.9073e-01, 7.8378e-01, -3.7698e-01, 2.5653e-01,
    6.6809e-02, -4.6159e-02, -1.1682e+00, 9.4008e-01, -2.8604e-01, -9.8455e-01, -8.4521e-02,
    1.1725e+00, -5.2122e-01, 2.0930e-01, -1.0758e+00, -1.2000e+00, -3.4564e-01, 7.7095e-01,
    -2.1415e-01, 4.9522e-01, 1.1138e-01, 2.9718e-01, 1.6674e-01, 9.0266e-03, -7.2187e-01,
    -1.6893e-01, -3.8307e-01, -8.1965e-01, 5.7392e-01, 5.2491e-01, 3.0054e-01, -2.7403e-01,
    4.9071e-01, -1.3731e-01, 7.5082e-01, -1.5832e-01, -9.0292e-01, 7.6673e-01, 1.0437e+00,
    -2.4824e-01, -2.9864e-02, 7.6907e-01, 1.7738e-01, -8.1791e-01, -3.8350e-01, -4.2430e-01,
    3.6271e-01, -7.0910e-01, 4.1320e-02, 1.6088e-01, 6.7181e-01, -5.1670e-02, -8.8621e-02,
    -1.0634e-01, 1.4505e-01, -1.4048e-01, -3.7868e-01, -2.7504e-01, -1.0575e-01, -4.5818e-01,
    -1.8012e-01, -1.7776e-01, -1.5168e-02, -1.2622e-01, 3.0419e-01, -5.4175e-01, -2.4408e-01,
    7.5511e-04, -1.1839e-01, -2.2597e-01, 2.9224e-01, 8.9874e-02, 4.0793e-02, -1.5220e-01,
    -1.2086e-01, -2.5553e-02, 2.1121e-01, 3.5050e-01, 6.5455e-01, -3.5875e-01, 3.4124e-01,
    3.7216e-01, -3.7675e-01, -3.5579e-01, -2.2914e-01, -2.5312e-01, -2.3728e-01, 1.9538e-01,
    7.5381e-01, 3.8138e-01, -1.8444e-01, 1.7461e-01, 8.8768e-01, -2.0869e-01, -2.8567e-01,
    -4.4338e-01, -5.2091e-01, -3.4589e-01, 2.6230e-01, -4.8881e-01, -4.3110e-01, -9.6742e-02,
    3.1427e-01, -3.8575e-01, -7.3073e-01, -6.3423e-01, 2.0024e-01, -1.2782e-01, -4.4549e-01,
    -1.3044e-01, -5.5782e-01, -1.9336e-01, -2.3140e-02, 3.3925e-01, 2.6612e-01, -4.3809e-01,
    1.5580e-01, -2.2722e-01, 5.6263e-01, -4.5625e-01, 1.6799e-02, -2.4670e-01, -4.8462e-01,
    4.0169e-01, -8.6574e-01, 9.6719e-01, -6.8951e-01, -5.1685e-01, 1.4706e-01, -8.1631e-01,
    2.8778e-01, 7.7695e-03, -3.5150e-01, 1.5931e-01, -2.5670e-01, 3.5696e-01, -3.5685e-01,
    1.5019e-01, 1.9400e-01, 1.0951e-01, -1.7516e-01, -3.7008e-01, -1.5201e-01, 3.8609e-01,
    -4.3799e-02, -7.8181e-02, 6.4005e-02, 1.8470e-01, -5.3793e-03, 4.2016e-01, -1.9666e-01,
    -2.1731e-01, -4.8612e-02, 4.4191e-01, 3.1625e-01, 2.0395e-01, 5.2946e-01, -9.6660e-02,
    2.1199e-01, 3.8972e-01, 4.0530e-01, 1.9532e-01, -2.2680e-01, 1.4567e-01, -1.6575e-01,
    -2.9035e-01, -4.9516e-01, -6.8929e-02, -9.9354e-02, 6.7719e-02, -2.1810e-01, -4.5929e-01,
    1.5885e-01, -3.4521e-01, -3.1028e-02, -8.5185e-02, -1.8586e-01, 1.3610e-02, 1.5283e-01,
    1.1242e-01, 3.1427e-01, -2.6643e-01, 3.8064e-02, 1.3263e-01, -6.8622e-02, 1.5667e-01,
    -3.2208e-01, 1.9753e-01, 2.8122e-01, 4.0164e-01, 1.2984e-01, 5.4085e-02, -1.2218e-01,
    -1.4870e-01, -1.9856e-01, -4.3930e-02, -2.0586e-01, -2.2745e-01, -2.6320e-01, 4.5760e-02,
    2.8799e-02, -1.0820e-03, 6.4705e-02, 3.7758e-02, -1.9046e-01, -2.5213e-01, -1.9441e-01,
    -2.2987e-01, -1.7033e-02, -4.2642e-01, 1.9640e-01, 2.2227e-01, -2.9164e-01, 2.4538e-01,
    7.0614e-02, 2.5238e-01, -1.8264e-03, -1.7114e-01, -2.3615e-01, 2.0154e-02, 2.1112e-01,
    9.3896e-02, -7.1864e-02, 3.2475e-01, -2.8437e-01, 2.3187e-02, -1.2586e-01, 1.0888e-01,
    2.8846e-03, -8.4533e-03, -1.6773e-01, 3.6284e-02, 9.4356e-02, -1.9589e-01, 2.3698e-01,
    -2.2570e-01, -8.3671e-02, 5.3949e-03, -2.0679e-01, 2.1603e-01, -2.3678e-01, -4.7833e-03,
    -7.2426e-02, -4.4987e-02, 1.9478e-01, 1.8551e-01, -1.1629e-02, -4.2379e-02, -1.5631e-01,
    2.2677e-01, -4.0655e-02, -7.5418e-02, -1.2770e-01, -2.4117e-01, -7.3973e-02, 2.7724e-01,
    -1.1726e-02, -3.8111e-02, -1.3170e-01, -1.8753e-01, -1.4160e-01, -2.0177e-02
]]),
                          torch.tensor([[
                              0.3465, 0.5871, -0.2564, 0.8673, -0.1350, 0.2439, 0.1679, 0.4953,
                              -0.7851, -0.1182, 0.2515, 0.3158, -0.3571, 0.5920, 0.1206, -0.4152,
                              -0.7059, 0.7737, -0.6614, 0.1924, 0.9973, -0.1094, -0.3127, -0.9823,
                              -0.2639, 0.3347, -0.4425, 0.4308, 0.4113, 0.1310, -0.6548, -0.1260,
                              -0.0256, -0.0356, 0.7587, -0.2943, 0.4177, -0.2976, -0.4433, -0.3179,
                              -0.0291, -0.4939, -0.9185, 0.3675, -0.2433, -0.4979, 0.3711, 0.0690,
                              0.3417, -0.2527, 0.3639, -0.1827, 0.1489, 0.3688, -0.4312, -0.3154,
                              -0.0251, 0.1961, 0.6428, 0.0503, 0.4718, 0.0323, -0.2762, 0.2810,
                              0.0563, 0.0725, -0.1903, -0.3751, 0.1817, -0.0691, 0.1478, 0.2306,
                              0.2716, -0.2629, -0.0293, -0.2198, -0.1557, 0.1365, 0.4189, -0.2551,
                              -0.1155, 0.1947, 0.4576, -0.2207, 0.0863, -0.1100, 0.2059, -0.8020,
                              0.0137, -0.2054, -0.0694, -0.3079, 0.2987, -0.1702, -0.1808, 0.0623,
                              0.2171, -0.0174, 0.0721, 0.3626
                          ]]), torch.tensor([[-0.0190, 0.0036,
                                              0.0021]]), torch.tensor([[0.0686, 0.0015, 0.0022]]),
                          torch.tensor([[-0.0078, 0.0128, 1.0311, 0.0233, -0.0015,
                                         -0.8619]]), torch.tensor([[1.0026]]))
