""" Constants for the project. """
import torch

DATA_DIR_NERSEMBLE = "../new_master_thesis/data/nersemble/Paul-audio-856/856"
"""
Directory containing the data for the NERsemble project.
"""

# from right to left, even numbers are level, while odd numbers are from below
TRAIN_CAMS = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]
TEST_CAMS = [8]
SERIALS = sorted([
    "220700191",
    "221501007",
    "222200036",
    "222200038",
    "222200039",
    "222200040",
    "222200041",
    "222200042",
    "222200043",
    "222200044",
    "222200045",
    "222200046",
    "222200047",
    "222200048",
    "222200049",
])  # NOTE: the test cam is missing i think cam_222200037
# TRAIN_SEQUENCES = list(range(3, 80))
# TEST_SEQUENCES = list(range(80, 102))
TRAIN_SEQUENCES = list(range(3, 6)) + list(range(11, 85))
TEST_SEQUENCES = list(range(6, 11)) + list(range(85, 102))

# flame constants
FLAME_MESH_PATH = "assets/flame/head_template_mesh.obj"
""" Path to the FLAME head template mesh. """
FLAME_LMK_PATH = "assets/flame/landmark_embedding_with_eyes.npy"
""" Path to the FLAME landmark embedding. """  # do I even need this?
# can be downloaded from https://flame.is.tue.mpg.de/download.php
FLAME_MODEL_PATH = "assets/flame/flame2023.pkl"  # FLAME 2023 (versions w/ jaw rotation)
""" Path to the FLAME model. """
FLAME_PARTS_PATH = "assets/flame/FLAME_masks.pkl"  # FLAME Vertex Masks
""" Path to the FLAME parts. """

# should all be from the same sequence and timestep
# DEFAULT_SE3_ROTATION = torch.tensor(
#     [[-0.85767704, 0.25412178, -0.44700348], [-0.12943351, -0.9480447, -0.29061666],
#      [-0.4976313, -0.19139802, 0.8460081]],
#     dtype=torch.float32)
# """ Default SE3 rotation. """
# DEFAULT_SE3_TRANSLATION = torch.tensor([0.04575331, 0.06610457, -0.05820158],
# dtype=torch.float32)
# """ Default SE3 translation. """
DEFAULT_SE3_ROTATION = torch.tensor(
    [[0.9063, 0.0401, 0.4211], [-0.1676, 0.9481, 0.2705], [-0.3885, -0.3156, 0.8662]],
    dtype=torch.float32)
""" Default SE3 rotation. """
DEFAULT_SE3_TRANSLATION = torch.tensor([0.0595, 0.0837, -0.1374], dtype=torch.float32)
""" Default SE3 translation. """
CANONICAL_PCD = 'assets/pointcloud_s03_f218.pcd'
""" Canonical point cloud. """

SEGMENTATION_CLASSES = {
    (0, 0, 0): 0,
    (207, 2, 252): 0,
    (0, 255, 0): 1,
    (1, 171, 236): 2,
    (255, 127, 0): 3,
    (8, 208, 126): 4,
    (83, 130, 55): 5,
    (8, 4, 195): 6,
    (236, 186, 110): 7,
    (141, 223, 0): 8,
    (127, 255, 255): 9,
    (255, 255, 0): 10,
    (178, 139, 210): 11,
    (167, 5, 72): 12,
    (127, 255, 127): 13,
    (73, 91, 168): 14,
}
"""
Categories:
    - 0: background
    - 1: neck
    - 2: jumper
    - 3: face
    - 4: hair
    - 5: left ear
    - 6: right ear
    - 7: upper lip
    - 8: lower lip
    - 9: nose
    - 10: left eye
    - 11: right eye
    - 12: left eyebrow
    - 13: right eyebrow
    - 14: inner mouth
"""

CANONICAL_SEQUENCE_FRAME = (3, 218)
""" Canonical sequence and frame index """
CANONICAL_FLAME_PARAMS = (torch.tensor([[
    2.2544e-02, -5.9882e-01, -7.3308e-01, 3.2558e-01, 1.2412e+00, -1.0464e-01, 1.5460e-01,
    3.5699e-01, -8.5423e-01, 9.4808e-02, -8.5080e-01, -4.7664e-01, 8.8770e-01, 1.4933e+00,
    4.8907e-01, 3.2166e-01, 5.5617e-01, -1.3641e-01, -6.4213e-01, -9.4801e-01, -1.0433e+00,
    -8.1008e-02, -2.6331e-01, -1.0034e+00, -2.0806e-01, -4.9938e-01, -7.7828e-01, -2.9156e-01,
    -7.6678e-01, -4.4536e-01, -1.6580e-01, -1.4048e+00, 9.6881e-01, 7.5500e-01, -1.7513e-01,
    3.3812e-01, 1.6860e-01, -8.5319e-01, -4.9073e-01, 7.8378e-01, -3.7698e-01, 2.5653e-01,
    6.6809e-02, -4.6159e-02, -1.1682e+00, 9.4008e-01, -2.8604e-01, -9.8455e-01, -8.4521e-02,
    1.1725e+00, -5.2122e-01, 2.0930e-01, -1.0758e+00, -1.2000e+00, -3.4564e-01, 7.7095e-01,
    -2.1415e-01, 4.9522e-01, 1.1138e-01, 2.9718e-01, 1.6674e-01, 9.0266e-03, -7.2187e-01,
    -1.6893e-01, -3.8307e-01, -8.1965e-01, 5.7392e-01, 5.2491e-01, 3.0054e-01, -2.7403e-01,
    4.9071e-01, -1.3731e-01, 7.5082e-01, -1.5832e-01, -9.0292e-01, 7.6673e-01, 1.0437e+00,
    -2.4824e-01, -2.9864e-02, 7.6907e-01, 1.7738e-01, -8.1791e-01, -3.8350e-01, -4.2430e-01,
    3.6271e-01, -7.0910e-01, 4.1320e-02, 1.6088e-01, 6.7181e-01, -5.1670e-02, -8.8621e-02,
    -1.0634e-01, 1.4505e-01, -1.4048e-01, -3.7868e-01, -2.7504e-01, -1.0575e-01, -4.5818e-01,
    -1.8012e-01, -1.7776e-01, -1.5168e-02, -1.2622e-01, 3.0419e-01, -5.4175e-01, -2.4408e-01,
    7.5511e-04, -1.1839e-01, -2.2597e-01, 2.9224e-01, 8.9874e-02, 4.0793e-02, -1.5220e-01,
    -1.2086e-01, -2.5553e-02, 2.1121e-01, 3.5050e-01, 6.5455e-01, -3.5875e-01, 3.4124e-01,
    3.7216e-01, -3.7675e-01, -3.5579e-01, -2.2914e-01, -2.5312e-01, -2.3728e-01, 1.9538e-01,
    7.5381e-01, 3.8138e-01, -1.8444e-01, 1.7461e-01, 8.8768e-01, -2.0869e-01, -2.8567e-01,
    -4.4338e-01, -5.2091e-01, -3.4589e-01, 2.6230e-01, -4.8881e-01, -4.3110e-01, -9.6742e-02,
    3.1427e-01, -3.8575e-01, -7.3073e-01, -6.3423e-01, 2.0024e-01, -1.2782e-01, -4.4549e-01,
    -1.3044e-01, -5.5782e-01, -1.9336e-01, -2.3140e-02, 3.3925e-01, 2.6612e-01, -4.3809e-01,
    1.5580e-01, -2.2722e-01, 5.6263e-01, -4.5625e-01, 1.6799e-02, -2.4670e-01, -4.8462e-01,
    4.0169e-01, -8.6574e-01, 9.6719e-01, -6.8951e-01, -5.1685e-01, 1.4706e-01, -8.1631e-01,
    2.8778e-01, 7.7695e-03, -3.5150e-01, 1.5931e-01, -2.5670e-01, 3.5696e-01, -3.5685e-01,
    1.5019e-01, 1.9400e-01, 1.0951e-01, -1.7516e-01, -3.7008e-01, -1.5201e-01, 3.8609e-01,
    -4.3799e-02, -7.8181e-02, 6.4005e-02, 1.8470e-01, -5.3793e-03, 4.2016e-01, -1.9666e-01,
    -2.1731e-01, -4.8612e-02, 4.4191e-01, 3.1625e-01, 2.0395e-01, 5.2946e-01, -9.6660e-02,
    2.1199e-01, 3.8972e-01, 4.0530e-01, 1.9532e-01, -2.2680e-01, 1.4567e-01, -1.6575e-01,
    -2.9035e-01, -4.9516e-01, -6.8929e-02, -9.9354e-02, 6.7719e-02, -2.1810e-01, -4.5929e-01,
    1.5885e-01, -3.4521e-01, -3.1028e-02, -8.5185e-02, -1.8586e-01, 1.3610e-02, 1.5283e-01,
    1.1242e-01, 3.1427e-01, -2.6643e-01, 3.8064e-02, 1.3263e-01, -6.8622e-02, 1.5667e-01,
    -3.2208e-01, 1.9753e-01, 2.8122e-01, 4.0164e-01, 1.2984e-01, 5.4085e-02, -1.2218e-01,
    -1.4870e-01, -1.9856e-01, -4.3930e-02, -2.0586e-01, -2.2745e-01, -2.6320e-01, 4.5760e-02,
    2.8799e-02, -1.0820e-03, 6.4705e-02, 3.7758e-02, -1.9046e-01, -2.5213e-01, -1.9441e-01,
    -2.2987e-01, -1.7033e-02, -4.2642e-01, 1.9640e-01, 2.2227e-01, -2.9164e-01, 2.4538e-01,
    7.0614e-02, 2.5238e-01, -1.8264e-03, -1.7114e-01, -2.3615e-01, 2.0154e-02, 2.1112e-01,
    9.3896e-02, -7.1864e-02, 3.2475e-01, -2.8437e-01, 2.3187e-02, -1.2586e-01, 1.0888e-01,
    2.8846e-03, -8.4533e-03, -1.6773e-01, 3.6284e-02, 9.4356e-02, -1.9589e-01, 2.3698e-01,
    -2.2570e-01, -8.3671e-02, 5.3949e-03, -2.0679e-01, 2.1603e-01, -2.3678e-01, -4.7833e-03,
    -7.2426e-02, -4.4987e-02, 1.9478e-01, 1.8551e-01, -1.1629e-02, -4.2379e-02, -1.5631e-01,
    2.2677e-01, -4.0655e-02, -7.5418e-02, -1.2770e-01, -2.4117e-01, -7.3973e-02, 2.7724e-01,
    -1.1726e-02, -3.8111e-02, -1.3170e-01, -1.8753e-01, -1.4160e-01, -2.0177e-02
]]),
                          torch.tensor([[
                              0.3465, 0.5871, -0.2564, 0.8673, -0.1350, 0.2439, 0.1679, 0.4953,
                              -0.7851, -0.1182, 0.2515, 0.3158, -0.3571, 0.5920, 0.1206, -0.4152,
                              -0.7059, 0.7737, -0.6614, 0.1924, 0.9973, -0.1094, -0.3127, -0.9823,
                              -0.2639, 0.3347, -0.4425, 0.4308, 0.4113, 0.1310, -0.6548, -0.1260,
                              -0.0256, -0.0356, 0.7587, -0.2943, 0.4177, -0.2976, -0.4433, -0.3179,
                              -0.0291, -0.4939, -0.9185, 0.3675, -0.2433, -0.4979, 0.3711, 0.0690,
                              0.3417, -0.2527, 0.3639, -0.1827, 0.1489, 0.3688, -0.4312, -0.3154,
                              -0.0251, 0.1961, 0.6428, 0.0503, 0.4718, 0.0323, -0.2762, 0.2810,
                              0.0563, 0.0725, -0.1903, -0.3751, 0.1817, -0.0691, 0.1478, 0.2306,
                              0.2716, -0.2629, -0.0293, -0.2198, -0.1557, 0.1365, 0.4189, -0.2551,
                              -0.1155, 0.1947, 0.4576, -0.2207, 0.0863, -0.1100, 0.2059, -0.8020,
                              0.0137, -0.2054, -0.0694, -0.3079, 0.2987, -0.1702, -0.1808, 0.0623,
                              0.2171, -0.0174, 0.0721, 0.3626
                          ]]), torch.tensor([[-0.0190, 0.0036,
                                              0.0021]]), torch.tensor([[0.0686, 0.0015, 0.0022]]),
                          torch.tensor([[-0.0078, 0.0128, 1.0311, 0.0233, -0.0015,
                                         -0.8619]]), torch.tensor([[1.0026]]))

CANONICAL_SEQUENCE_FRAME_OTHER_GUY = (4, 42)
CANONICAL_FLAME_PARAMS_OTHER_GUY = (torch.Tensor([[
    -5.9753e-01, -1.4762e+00, -6.2127e-01, 3.1340e-01, 7.7570e-01, -1.5882e+00, 1.0522e+00,
    7.1898e-02, -7.8007e-01, 8.1967e-01, -4.5696e-01, -1.6625e+00, 3.7518e-01, 1.9628e-01,
    2.8328e-01, 2.9937e-01, -1.5588e+00, 9.7996e-01, -1.5365e+00, -1.3063e+00, -3.5411e-01,
    -1.4879e+00, 9.4897e-01, -8.7698e-01, 1.1203e+00, -4.7765e-01, 3.7954e-01, 5.7571e-01,
    2.7052e-01, -5.9337e-01, 3.8064e-01, -2.0767e-01, 8.7867e-01, 4.1831e-01, 1.5330e+00,
    7.0260e-01, 3.4750e-01, -6.5183e-01, -2.0592e-01, -6.0798e-02, 4.8480e-01, 4.1549e-01,
    2.0681e-01, -1.4509e-01, 6.3619e-01, 2.5709e-01, 3.3084e-01, 3.7163e-01, -1.9644e-01,
    -9.5272e-01, -1.0062e+00, -1.2404e+00, 4.1853e-01, 3.2049e-02, -1.3873e-01, -2.5334e-02,
    -1.4968e+00, -4.8991e-01, -3.2846e-01, 2.8373e-01, -2.9859e-02, -4.4985e-01, -3.8918e-01,
    7.0505e-01, 6.5621e-01, 1.4400e-02, -2.3304e-01, -7.2237e-02, -1.6686e-01, 4.1925e-01,
    6.6759e-01, 4.8143e-01, -2.7642e-01, 6.2832e-01, -4.3318e-01, 4.0404e-01, 7.7911e-02,
    4.7954e-01, -3.3538e-01, -1.9945e-01, -1.3185e-01, 1.6083e-01, 4.6737e-01, -5.6162e-02,
    -5.5372e-01, -4.2117e-01, -1.6304e-01, -9.4099e-02, -4.4048e-01, 4.8899e-01, 1.6357e-01,
    -2.1919e-01, -2.9458e-01, -6.4345e-01, -5.7643e-02, -6.8418e-01, -3.2766e-01, -1.9713e-01,
    -3.0707e-01, 1.5770e-01, 5.3203e-02, -2.4543e-01, 7.8224e-01, -3.1274e-01, -1.3708e-01,
    -2.8946e-01, 9.9815e-02, -1.6302e-01, 1.1865e-01, -8.7767e-02, -8.0357e-01, 3.4434e-01,
    -3.9810e-01, -4.0202e-01, 3.4380e-01, -2.4970e-01, -3.4895e-01, -1.3676e-01, -2.9266e-01,
    -4.4351e-01, 5.0074e-02, -1.4177e+00, 9.5740e-03, -1.8664e-01, -2.1432e-01, 8.9648e-01,
    3.9019e-01, 4.0123e-01, 3.8099e-02, 5.4141e-02, -3.8834e-01, -6.6732e-01, 5.5876e-01,
    7.2601e-02, -3.2288e-01, -7.7897e-01, 1.0523e-01, 3.2161e-01, -3.9083e-01, -4.8584e-02,
    7.1431e-01, 1.9555e-01, -1.7096e-01, -2.2366e-01, -3.9532e-01, -1.6915e-02, -2.9472e-02,
    2.5946e-01, 5.4797e-01, 3.2210e-01, -2.0763e-01, -4.9719e-01, -2.4492e-01, -1.1140e-01,
    7.0301e-01, 6.7061e-01, -2.1646e-01, -7.5850e-02, -6.0837e-01, -3.8981e-02, -5.5149e-01,
    -2.0845e-01, 2.7716e-01, -1.5518e-01, 3.3218e-01, -1.9663e-01, -4.0030e-01, -1.6298e-01,
    -4.7859e-01, 4.9304e-01, 2.3733e-01, -2.0890e-01, -1.9513e-01, -2.6225e-01, -9.5172e-02,
    -3.6866e-01, -1.9519e-01, 7.6108e-01, -1.9555e-01, 5.3736e-01, 2.6372e-01, -2.5886e-01,
    1.0210e-01, 1.3672e-01, 2.8467e-01, -5.0022e-01, 3.4410e-01, 4.6309e-02, -1.6428e-01,
    -1.3935e-01, -6.1469e-01, 2.1622e-01, 4.2524e-01, -3.1064e-01, 5.2471e-02, 3.4560e-01,
    -7.8333e-02, 5.0931e-02, -2.6215e-01, 1.0465e-01, -4.1324e-02, -5.8779e-02, 7.3727e-02,
    1.8527e-01, -8.5348e-02, -1.5091e-02, -1.4378e-03, -3.3130e-01, 4.5625e-01, -5.4810e-02,
    -2.4900e-01, 2.0056e-01, 3.2451e-01, -2.3825e-01, 1.0582e-01, 1.2437e-01, 5.7213e-01,
    -3.0630e-01, -8.1877e-02, -3.4131e-01, 1.4088e-01, -4.0165e-02, 3.0770e-01, -2.8187e-01,
    -3.2385e-01, -5.4478e-02, 1.2900e-01, 9.1176e-02, -4.6129e-02, 2.8422e-01, -9.8395e-03,
    1.1843e-01, 5.8931e-01, -2.2906e-01, 1.0225e-02, 7.2105e-02, -2.0952e-01, -2.0267e-02,
    2.5521e-01, 2.0465e-01, -4.3707e-02, 1.1259e-01, 1.4741e-01, -2.7070e-02, -5.7713e-01,
    3.7022e-01, 7.9061e-02, 5.8359e-02, -3.4419e-02, 1.7066e-01, 2.9404e-01, 6.2928e-02,
    6.1492e-02, -1.4271e-01, 3.0500e-01, 5.3698e-02, -2.5760e-02, 3.0980e-01, 1.4634e-02,
    -6.4105e-02, -1.5232e-01, -3.1436e-02, 1.7803e-01, -2.9817e-01, 2.3198e-01, -1.9590e-01,
    -3.2528e-02, -7.4638e-02, -2.6322e-01, 1.5331e-01, -6.8511e-03, -7.0032e-02, -4.9377e-03,
    -1.6715e-01, 2.3890e-01, -6.8723e-02, 6.6449e-02, -4.4987e-02, -6.9731e-02, -2.7545e-01,
    3.8033e-02, 1.1511e-01, -2.0947e-02, -1.5423e-01, -6.6319e-02, -1.2111e-01, -1.5382e-01,
    -1.1366e-01, -2.8627e-02, -1.4508e-01, 1.7058e-02, -4.5315e-02, 7.7107e-02, -1.8681e-01,
    1.8774e-02, -1.7679e-02, 1.6251e-01, 9.4702e-02, -2.8969e-02, 8.4853e-02
]]),
                                    torch.Tensor([[
                                        0.4406, 0.7452, -0.2516, 0.4325, -0.0904, -0.4861, -0.0349,
                                        -0.1655, 0.3759, -0.8198, -0.4978, 0.4479, 0.7125, 0.3752,
                                        -0.0105, -0.3385, -0.4597, 0.3933, 0.2329, -0.3037, 0.4143,
                                        0.3003, -0.2295, -0.1685, 0.6405, 0.0630, -0.6027, -1.2261,
                                        -0.1031, -0.8311, -0.0795, -0.4835, -0.0704, 0.2846,
                                        0.8015, -0.6426, -0.6372, 0.0313, -0.1570, 0.3262, 0.0326,
                                        0.0062, -0.4804, -0.0574, 0.3077, 0.0169, 0.1359, -0.1514,
                                        -0.6958, -0.2770, 0.3130, -0.2068, -0.2833, 0.3509,
                                        -0.2469, -0.0036, 0.1331, -0.5989, 0.1394, -0.3750, 0.1439,
                                        0.0293, -0.4144, -0.1369, 0.3530, 0.1535, -0.0091, 0.0754,
                                        -0.2777, -0.2444, -0.2379, -0.1242, 0.1600, -0.3841,
                                        0.0550, -0.3101, -0.0440, -0.0820, 0.1267, 0.0323, 0.6804,
                                        0.4725, 0.0769, 0.3291, 0.2144, 0.1939, -0.4030, 0.0025,
                                        -0.2541, -0.0844, 0.0103, -0.1442, 0.2262, 0.0315, 0.2621,
                                        0.1710, 0.0840, 0.1849, 0.0144, 0.0595
                                    ]]), torch.Tensor([[-0.0261, 0.0009, 0.0130]]),
                                    torch.Tensor([[0.1787, -0.0078, -0.0252]]),
                                    torch.Tensor(
                                        [[-0.0573, 0.0615, 0.5141, 0.0239, 0.0604,
                                          -0.0992]]), torch.Tensor([[1.0904]]))
OTHER_GUY_DATA_DIR = "data/085"
